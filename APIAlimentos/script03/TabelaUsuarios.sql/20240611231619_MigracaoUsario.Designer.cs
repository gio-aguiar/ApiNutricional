// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using alimentosAPI.Data;

#nullable disable

namespace alimentosAPI.script03.TabelaUsuarios.sql
{
    [DbContext(typeof(DataContext))]
    [Migration("20240611231619_MigracaoUsario")]
    partial class MigracaoUsario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlimentosAPI.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAcesso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Perfil")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasDefaultValue("Jogador");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("TB_USUARIOS", (string)null);
                });

            modelBuilder.Entity("alimentosAPI.Models.Alimentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Calorias")
                        .HasColumnType("int");

                    b.Property<int>("Carboidratos")
                        .HasColumnType("int");

                    b.Property<int>("Classe")
                        .HasColumnType("int");

                    b.Property<int>("Fibras")
                        .HasColumnType("int");

                    b.Property<byte[]>("FotoPersonagem")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Gorduras")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<int>("Proteinas")
                        .HasColumnType("int");

                    b.Property<int>("Sodio")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TB_Alimentos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Calorias = 56,
                            Carboidratos = 15,
                            Classe = 0,
                            Fibras = 1,
                            Gorduras = 0,
                            Nome = "Maçã",
                            Proteinas = 0,
                            Sodio = 0,
                            Tipo = 1,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            Calorias = 98,
                            Carboidratos = 26,
                            Classe = 0,
                            Fibras = 2,
                            Gorduras = 0,
                            Nome = "Banana",
                            Proteinas = 1,
                            Sodio = 21,
                            Tipo = 1,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 3,
                            Calorias = 207,
                            Carboidratos = 1,
                            Classe = 0,
                            Fibras = 0,
                            Gorduras = 11,
                            Nome = "Picanha",
                            Proteinas = 20,
                            Sodio = 450,
                            Tipo = 4,
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("alimentosAPI.Models.Alimentos", b =>
                {
                    b.HasOne("AlimentosAPI.Models.Usuario", "Usuario")
                        .WithMany("Alimentos")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AlimentosAPI.Models.Usuario", b =>
                {
                    b.Navigation("Alimentos");
                });
#pragma warning restore 612, 618
        }
    }
}
